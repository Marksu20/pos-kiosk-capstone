<style>
  .alert {
  position: fixed;
  top: 20px;
  right: 20px;
  z-index: 1050;
  min-width: 300px;
}
</style>
<div class="container-fluid">
  <div class="row">

    <%- include('../partials/pos_sidebar.ejs') %>

    <main class="col-md-6 ml-sm-auto col-lg-7 col-xl-7 px-md-4 py-4">

      <div class="d-flex justify-content-between col-12 col-md-4 col-lg-2 mb-3 w-25">
        <input class="form-control form-control-dark" type="text" name="searchTerm" placeholder="Search..." aria-label="Search">
      </div>

      <nav>
        <ul class="nav nav-pills mb-3" id="pills-tab" role="tablist">
          <li class="nav-item px-2 " role="presentation">
            <a style="color: white; text-decoration: none;" href="/pos">
              <button class="btn btn-category rounded-5 px-4 <%= !currentCategory ? 'active' : '' %>">
                All Products
              </button>
            </a>
          </li>
          <% categories.forEach(function (category) { %>
            <li class="nav-item px-2" role="presentation">
              <a style="color: white; text-decoration: none;" href="/pos?category=<%= category.name %>">
                <button class="btn btn-category rounded-5 px-4 <%= currentCategory === category.name ? 'active' : '' %>">
                  <%= category.name %> 
                </button>
              </a>
            </li>
          <% }) %>
        </ul>
      </nav>

      <!-- all products -->
      <div class="tab-content" id="pills-tabContent">
        <div class="tab-pane fade show active" id="pills-allproducts" role="tabpanel" aria-labelledby="pills-allproducts-tab">
          <div class="row my-4">
            <% if(products.length > 0) { %>
              <% products.forEach(function(product) { %>
                <div class=" col-12 col-md-6 col-lg-4 col-xl-3 mb-4 mb-lg-3 h-100">
                  <div 
                    class="product-container card btn btn-outline-light h-100 add-to-order" 
                    style="color: #000;"
                    data-id="<%= product._id %>" 
                    data-name="<%= product.name %>" 
                    data-price="<%= product.price %>"
                    data-image="<%= product.image %>"><!-- Added data attributes for product details -->
                    <div class="img-container shadow-sm rounded">
                      <img class="rounded" src="<%= product.image %>" alt="<%= product.name %>">
                    </div>
                    <div class="card-body">
                      <h6 class="card-title"><%= product.name %> <br> ₱ <%= product.price %></h6>
                      <% if(product.quantity == 0){ %>
                        <p>x<strong class="text-danger"><%= product.quantity %></strong> <span class="badge bg-danger rounded-pill">no stock</span></p>
                      <% } else if (product.quantity >= 0 && product.quantity <= 5) { %>
                        <p>x<strong class="text-warning"><%= product.quantity %></strong> <span class="badge rounded-pill bg-warning">low stock</span></p>
                      <% } else { %>
                        <p>x<strong><%= product.quantity %></strong></p>
                      <% } %>
                    </div>
                  </div>
                </div>
              <% }) %>
            <% } else { %>
              <div class="col-12">
                <p class="text-danger">no product yet.</p>
              </div>
            <% } %> 
          </div>
        </div>

      </div>
    </main>

    <!-- right sidebar -->
    <nav class="col-md-4 col-lg-3 col-xl-3">
      <div class="row">
        <div class="card checkout-order-summary shadow-sm">
          <form action="/pos/confirm-payment"  method="POST">
            <div class="card-body">
              <div class="p-3 bg-light mb-3">
                <input name="customerName" id="customer-name" class="w-50"  type="text" style="border:none; outline: none; border-bottom: 0.5px solid #adb5bd; background-color: #f8f9fa;" placeholder="Customer">
                <input type="hidden" name="hiddenCustomerName" id="hidden-customer-name">
              </div>
              <input type="hidden" name="orderItems" id="order-items" value="[]">
              <input type="hidden" name="discount" id="hidden-discount" value="0">
              <div class="table-responsive">
                <table class="table table-centered mb-0 table-nowrap">
                  <!-- table head -->
                  <thead>
                    <tr>
                      <th class="border-top-0" style="width: 110px;" scope="col">Product</th>
                      <th class="border-top-0 text-start" scope="col">Price</th>
                      <th class="border-top-0 text-center" scope="col">Quantity</th>
                    </tr>
                  </thead>
                  <!-- table body -->
                  <tbody id="order-summary">
                    <input type="hidden" name="orderItems" id="order-items">
                    <!-- order summary here javascript generated -->
                  </tbody>
                    <!-- order subtotal -->
                  <tr>
                    <td colspan="1"><h6 class="font-size-14 m-0">Sub Total :</h6></td>
                    <td colspan="2" class="text-start" id="sub-total">₱ 0.00</td>
                  </tr>
                  <!-- order discount (if have) -->
                  <tr id="discountRow">
                    <td colspan="1"><h6 class="font-size-14 m-0">Discount :</h6></td>
                    <td colspan="2" class="text-start" id="discount-value">₱ 0.00</td>
                  </tr>
                  <!-- order total -->                             
                  <tr class="bg-light">
                    <td colspan="1"><h6 class="font-size-14 m-0">Total:</h6></td>
                    <td name="total" colspan="2" class="text-start" id="total-amount">₱ 0.00</td>
                    <input type="hidden" name="TotalAmount" id="hidden-total-amount">
                  </tr>
                  <!-- discount options -->
                  <td colspan="2">
                    <select class="form-select form-select-sm" id="discount">
                      <option value="0">No Discount</option>
                      <% discounts.forEach(function(discount) { %> 
                        <option value="<%= discount.value %>"><%= discount.name %> - <%= discount.value %>%</option>
                      <% }) %>
                    </select>
                  </td>
                  <!-- order type -->
                  <td colspan="2">
                    <select name="orderType" class="form-select form-select-sm" aria-label=".form-select-sm example">
                      <option value="Dine In">Dine In</option>
                      <option value="Takeout">Takeout</option>
                    </select>
                  </td>
                </table>
              </div>
              <div class="p-1 mt-3">                
                <div class="row">
                  <div class="col-6">
                    <button type="button" class="btn btn-dark w-100" id="confirm-order">Confirm Order</button>
                  </div>
                  <div class="col-6">
                    <button type="button" class="btn btn-danger w-100" id="cancel-order">Void</button>
                  </div>
                </div>
              </div>
            </div>

            <!-- Payment Modal -->
            <div class="modal fade" id="paymentModal" tabindex="-1" aria-labelledby="paymentModalLabel" aria-hidden="true">
              <div class="modal-dialog">
                <div class="modal-content">
                  <div class="modal-header">
                    <h5 class="modal-title" id="paymentModalLabel">Payment</h5>
                    <!-- <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button> -->
                  </div>
                  <div class="modal-body">
                      <div class="mb-3">
                        <label for="cash-received" class="form-label">Cash Received</label>
                        <input type="number" step="0.01" type="number" class="form-control" id="cash-received" required>
                      </div>
                      <div class="mb-3">
                        <label for="change" class="form-label">Change</label>
                        <input type="text" class="form-control" id="change" readonly>
                      </div>
                      <div class="modal-footer">
                        <button type="submit" class="btn btn-primary" id="confirm-payment">Confirm Payment</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                      </div>
                  </div>
                </div>
              </div>
            </div>
          </form>
        </div>
      </div>
    </nav>
</div>

<script> 
  let order = JSON.parse(localStorage.getItem('order')) || []; // Load from localStorage or initialize empty array
  let discountValue = parseFloat(localStorage.getItem('discountValue')) || 0; // Load from localStorage or initialize 0

   // Function to update order summary
  function updateOrderSummary() {
    const orderSummary = document.getElementById('order-summary');
    const subTotalEl = document.getElementById('sub-total');
    const discountEl = document.getElementById('discount-value');
    const totalAmountEl = document.getElementById('total-amount');

    orderSummary.innerHTML = ''; // Clear the order summary

    let subTotal = 0;

    // Loop through the order array and create table rows for each product
    order.forEach((item) => {
      const row = document.createElement('tr');
      row.innerHTML = `
        <td>
          <h6 class="font-size-16 text-truncate">
            <a class="text-dark">${item.name}</a>
          </h5>
        </td>
        <td>₱ ${item.price}</td>
        <td class="text-center">
          <button class="btn btn-sm btn-light p-1 increase-quantity" data-id="${item.id}" data-name="${item.name}" data-price="${item.price}">+</button>
          <strong name="quantity">${item.quantity}</strong>
          <button class="btn btn-sm btn-light p-1 decrease-quantity" data-id="${item.id}">-</button>
        </td>
      `;
      orderSummary.appendChild(row);
      subTotal += item.price * item.quantity; // Calculate subtotal
    });

    const discountAmount = (subTotal * discountValue) / 100; // Calculate discount
    const totalAmount = subTotal - discountAmount; // Calculate total after discount

    subTotalEl.textContent = `₱ ${subTotal.toFixed(2)}`;
    discountEl.textContent = `₱ ${discountAmount.toFixed(2)}`;
    totalAmountEl.textContent = `₱ ${totalAmount.toFixed(2)}`; // Update total with discount applied
  
    // Save updated order and discount to localStorage
    localStorage.setItem('order', JSON.stringify(order));
    localStorage.setItem('discountValue', discountValue.toString());

  }

   // handle add to order
  document.querySelectorAll('.add-to-order').forEach((button) => {
    button.addEventListener('click', () => {
      const product = {
      id: button.getAttribute('data-id'),
      name: button.getAttribute('data-name'),
      price: parseFloat(button.getAttribute('data-price')),
      quantity: 1,
    };

    //product quantity
    const productQuantity = parseInt(button.querySelector('strong').textContent);

    if (productQuantity === 0) {
      const proceed = confirm(`The product "${product.name}" is out of stock. Do you still want to add it to the order?`);
      if (!proceed) {
        return; // If the user cancels, don't add the product to the order
      }
    }
    
    // Check if the product is already in the order
    const existingProduct = order.find(item => item.id === product.id);
    if (existingProduct) {
      existingProduct.quantity += 1; // Increment quantity if product is already in the order
    } else {
      order.push(product); // Add new product to the order
    }
    updateOrderSummary(); // Update the order summary
  });
  });

  // handle discount
  document.getElementById('discount').addEventListener('change', (event) => {
      discountValue = parseFloat(event.target.value); // Get selected discount value
      updateOrderSummary(); // Recalculate totals with the new discount
    });

  // handle increment and decrement of order
  document.getElementById('order-summary').addEventListener('click', (event) => {
    if (event.target.classList.contains('increase-quantity')) {
      const productId = event.target.getAttribute('data-id');
      const product = order.find(item => item.id === productId);
      product.quantity += 1; // Increase product quantity
      updateOrderSummary(); // Update the order summary
    }

    if (event.target.classList.contains('decrease-quantity')) {
      const productId = event.target.getAttribute('data-id');
      const product = order.find(item => item.id === productId);
      if (product.quantity > 1) {
        product.quantity -= 1; // Decrease product quantity
      } else {
        order.splice(order.indexOf(product), 1); // Remove product if quantity is 1 and the user wants to decrease
      }
      updateOrderSummary(); // Update the order summary
    }
   });

  // if order void clear order summary
  document.getElementById('cancel-order').addEventListener('click', () => {
      order.length = 0; // Clear the order array
      updateOrderSummary(); // Update the order summary to reflect the cleared order
    });

  // handle "null" order if confirm
  document.getElementById('confirm-order').addEventListener('click', () => {
      if (order.length === 0) {
        alert("Please select at least one product before confirming the order.");
        return; // Prevent showing the payment modal if no product is selected
      }

      const totalAmountEl = document.getElementById('total-amount');
      const cashReceivedEl = document.getElementById('cash-received');

      // Set the default value of Cash Received to the total amount
      cashReceivedEl.value = parseFloat(totalAmountEl.textContent.replace('₱', '').trim());
      
      // Show the modal
      const paymentModal = new bootstrap.Modal(document.getElementById('paymentModal'));
      paymentModal.show();

      // Update change when Cash Received is edited
      cashReceivedEl.addEventListener('input', handleCashReceivedInput);
    });

  // Function to handle cash received input
  function handleCashReceivedInput() {
      const cashReceivedEl = document.getElementById('cash-received');
      const totalAmountEl = document.getElementById('total-amount');
      const changeEl = document.getElementById('change');

      const cashReceived = parseFloat(cashReceivedEl.value);
      const totalAmount = parseFloat(totalAmountEl.textContent.replace('₱', '').trim());
      
      const change = cashReceived - totalAmount;
      changeEl.value = `₱ ${change.toFixed(2)}`;
    }

  // Handle payment confirmation
  document.getElementById('confirm-payment').addEventListener('click', () => {
      // Populate hidden fields
      document.getElementById('order-items').value = JSON.stringify(order);
      document.getElementById('hidden-total-amount').value = parseFloat(document.getElementById('total-amount').textContent.replace('₱', '').trim());
      document.getElementById('hidden-discount').value = discountValue;
      
      // Here, you could process the payment and then clear the order
      const changeEl = document.getElementById('change');
      
      changeEl.value = 0;
      order.length = 0; // Clear the order array after confirming payment
      updateOrderSummary(); // Update the order summary
    });

  // Handle payment cancellation (going back to the order enlistment)
  document.querySelector('#paymentModal .btn-secondary').addEventListener('click', () => {
      const changeEl = document.getElementById('change');
      // Hide the modal (this is automatically handled by Bootstrap)
      const paymentModal = bootstrap.Modal.getInstance(document.getElementById('paymentModal'));
      changeEl.value = 0;
      paymentModal.hide();
    })

  // Ensure data is reloaded on page refresh
  document.addEventListener('DOMContentLoaded', () => {
    console.log(order)
    // Restore saved order and discount value from localStorage
    updateOrderSummary();
    // Set the discount dropdown to the saved value
    document.getElementById('discount').value = discountValue;
  });

  //handle search
  document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.querySelector('input[name="searchTerm"]');
    const productContainer = document.querySelector('.row.my-4');

    searchInput.addEventListener('input', function() {
      const searchTerm = searchInput.value;

      fetch(`/pos?searchTerm=${searchTerm}`, {
        headers: {
          'X-Requested-With': 'XMLHttpRequest' // Ensures the server knows it's an AJAX request
        }
      })
      .then(response => response.json())
      .then(products => {
        productContainer.innerHTML = '';

        if (products.length > 0) {
          products.forEach(product => {
            const productHtml = `
              <div class="col-12 col-md-6 col-lg-4 col-xl-3 mb-4 mb-lg-3 h-100">
                <div 
                  class="product-container card btn btn-outline-light h-100 add-to-order" 
                  style="color: #000;"
                  data-id="${product._id}" 
                  data-name="${product.name}" 
                  data-price="${product.price}"
                  data-image="${product.image}">
                  <div class="img-container shadow-sm rounded">
                    <img class="rounded" src="${product.image}" alt="${product.name}">
                  </div>
                  <div class="card-body">
                    <h6 class="card-title">${product.name} - ₱ ${product.price}</h6>
                    <p>x ${product.quantity}</p>
                  </div>
                </div>
              </div>
            `;
            productContainer.insertAdjacentHTML('beforeend', productHtml);
          });
        } else {
          productContainer.innerHTML = '<div class="col-12"><p class="text-danger">No product(s) found.</p></div>';
        }
      });
    });
  });
  
</script>

<!-- handle order notification -->
<script>
  document.addEventListener('DOMContentLoaded', function() {
    function showNotification(order) {

      if (order.status === 'To Serve') {
        return;
      }

      const notification = document.createElement('div');
      notification.className = 'alert alert-success alert-dismissible fade show';
      notification.role = 'alert';
      notification.innerHTML = `
        <strong>New Order Received!</strong> Order No. ${order.orderNumber} for ${order.customerName}.
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
      `;
      console.log(notification);
      document.body.appendChild(notification);
    }
    // Polling function to check for new orders
    function checkForNewOrders() {
      // const fakeOrder = {
      //   orderNumber: "12345",
      //   customerName: "Test Customer"
      // };
      // showNotification(fakeOrder);
      fetch('/pos/order-notif')
        .then(response => {
          if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
          }
          return response.text();
        })
        .then(text => {
          // Try to parse the text as JSON
          let data;
          try {
            data = JSON.parse(text);
          } catch (error) {
            throw new Error('Failed to parse JSON response');
          }
          // console.log(data);  // Log the data to check the structure

          if (data.success && data.newOrder) {
            showNotification(data.newOrder);
          }
        })
        .catch(error => {
          console.error('Error fetching new orders:', error);
        });
    }
    // Set interval to poll the server every 10 seconds
    setInterval(checkForNewOrders, 5000);
  })
</script>
